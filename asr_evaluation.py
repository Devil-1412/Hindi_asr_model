# -*- coding: utf-8 -*-
"""asr_evaluation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19yopgO7EH0SepRpNnytTIhCw_6ERROxx
"""

from jiwer import wer


def read_transcripts_from_file(directory):
    transcriptions = {}
    with open(directory, 'r', encoding='utf-8') as f:
        for line in f:
            audio_file, transcription = line.strip().split('\t')
            #add extension here to remove from file name using . replace(ext_name,'') in suffix
            audio_file = audio_file.replace('.m4a','').replace('.wav','')
            transcriptions[audio_file] = transcription
            return transcriptions


def normalize_transcriptions(transcriptions):
    for audio_file, transcription in transcriptions.items():
        #normalize transcription by removing characters like "."&","
        normalised_transcription = transcription.replace(',',"").replace('.',"")
        transcriptions[audio_file] = normalised_transcription
        return transcriptions


def compute_wer(ref, asr):
    wer_score = wer(ref,asr)


def main():
    #change "path of reference transcriptions" with your path for reference transcriptions
    ref_transcription_file_path = "path of reference transcriptions"
    ref_transcriptions = read_transcripts_from_file(ref_transcription_file_path)
    #change "path of asr transcriptions" with your path for asr transcriptions
    asr_transcription_file_path = "path of asr transcriptions"
    asr_transcriptions = read_transcripts_from_file(asr_transcription_file_path)
    norm_asr_transcriptions = normalize_transcriptions(asr_transcriptions)
    norm_ref_transcriptions = normalize_transcriptions(ref_transcriptions)
    eval_transcripts = {}
    for key in norm_ref_transcriptions.keys():
        if key in norm_asr_transcriptions.keys():
            eval_transcripts[norm_ref_transcriptions[key]] = norm_asr_transcriptions[key]
    asr = list(eval_transcripts.values())
    ref = list(eval_transcripts.keys())
    wer_score = compute_wer(ref, asr)
    print(wer_score)